name: Deploy to GitHub Pages with Corporate Content

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout public repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clone Corporate Repository
        run: |
          echo "Cloning corporate repository using token..."
          git clone https://${{ secrets.CORPORATE_PAT }}@github.com/fwornle/agentic-ai-nano-corporate.git docs-content/corporate-only
          
          # Verify clone worked
          echo "Corporate content structure:"
          ls -la docs-content/corporate-only/
          echo "Checking for encrypted content:"
          ls -la docs-content/corporate-only/content.encrypted.json

      - name: Verify corporate content
        run: |
          echo "Corporate content structure:"
          ls -la docs-content/corporate-only/
          echo "Encrypted content exists:"
          ls -la docs-content/corporate-only/content.encrypted.json || echo "content.encrypted.json not found"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install mkdocs-material
          pip install mkdocs-awesome-pages-plugin
          pip install mkdocs-mermaid2-plugin
          pip install mkdocs-minify-plugin
          pip install mkdocs-git-revision-date-localized-plugin

      - name: Build with MkDocs
        run: mkdocs build

      - name: Copy corporate content to built site
        run: |
          echo "Copying corporate-only directory to built site..."
          cp -r docs-content/corporate-only site/
          echo "Verifying corporate content was copied:"
          ls -la site/corporate-only/
          echo "Checking for encrypted content in built site:"
          ls -la site/corporate-only/content.encrypted.json

      - name: Create .nojekyll file for GitHub Pages
        run: |
          echo "Creating .nojekyll file to bypass Jekyll processing..."
          touch site/.nojekyll
          echo "Verifying .nojekyll file was created:"
          ls -la site/.nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './site'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
@startuml mcp-architecture
!include ../../../config/_standard-style.puml

title Model Context Protocol (MCP) Architecture

package "Host Application" {
  [Claude/ChatGPT/LLM] <<agent>> as llm
  [MCP Client] <<core>> as client
}

package "MCP Server" {
  [Server Core] <<core>> as server
  [Tools Handler] <<api>> as tools
  [Resources Handler] <<storage>> as resources
  [Prompts Handler] <<util>> as prompts
}

package "External Systems" {
  [File System] <<external>> as fs
  [Database] <<storage>> as db
  [Web APIs] <<external>> as api
  [Other Services] <<infra>> as services
}

llm --> client : Requests
client --> server : JSON-RPC\nover stdio/HTTP
server --> tools : execute()
server --> resources : read()
server --> prompts : get()

tools --> fs : File Operations
tools --> api : API Calls
resources --> db : Data Access
prompts ..> services : Context

note right of server
  MCP Server provides:
  - Tools (functions)
  - Resources (data)
  - Prompts (templates)
end note

note left of client
  Solves the MÃ—N problem:
  - M applications
  - N data sources
  - 1 protocol
end note

@enduml